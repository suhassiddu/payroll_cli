#!/usr/bin/env node

const fs = require("fs");
const moment = require('moment');
const commander = require('commander');
const csv = require("csv-stringify");

// get the name of the current week from the moment object
const getWeekName = day => day.format('dddd');

// get the name of the current month from the moment object
const getMonthName = day => day.format('MMMM');

// helper to write the data to the csv handler
function writePayroll(stringifier) {
    // loop over the 12 months
    for (let month = 0; month < 12; month++) {

        // get the mid date of the month and check the weekend and modify
        let midMonth = moment().add(month, 'month').date(15);
        midMonth = getWeekName(midMonth) == 'Sunday' ? midMonth.add(3, 'days') : midMonth;
        midMonth = getWeekName(midMonth) == 'Saturday' ? midMonth.add(4, 'days') : midMonth;

        // get the last date of the month and check the weekend and modify
        let lastDay = moment().add(month, 'month').endOf('month');
        lastDay = getWeekName(lastDay) == 'Sunday' ? lastDay.subtract(2, 'days') : lastDay;
        lastDay = getWeekName(lastDay) == 'Saturday' ? lastDay.subtract(1, 'day') : lastDay;

        stringifier.write({
            'month name': getMonthName(midMonth),
            'salary payment date': lastDay.format('YYYY-MM-DD'),
            'bonus payment date': midMonth.format('YYYY-MM-DD'),
        });
    }
}

function main() {
    commander
        .version('1.0.0', '-v, --version')
        .usage('[OPTIONS]...')
        .argument('<output>', 'Accepts the output file name')
        .parse(process.argv);

    const args = commander.args;

    let filename = args[0];

    // check the argument contains the .csv as extention
    filename = filename.substr(filename.length - 4) !== '.csv' ? `${filename}.csv` : filename;

    const csvColumns = [
        'month name',
        'salary payment date',
        'bonus payment date'
    ];

    const writableStream = fs.createWriteStream(filename);

    const stringifier = csv.stringify({ header: true, columns: csvColumns });

    writePayroll(stringifier);

    stringifier.pipe(writableStream);

    console.log(`Finished writing data to the file ${filename}`);
}

main();